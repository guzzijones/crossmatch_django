# Generated by Django 2.0.1 on 2018-01-22 15:51

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AccountMaster',
            fields=[
                ('create_date', models.DateField()),
                ('yearmo', models.IntegerField(blank=True, null=True)),
                ('master_id', models.AutoField(primary_key=True, serialize=False)),
                ('state_license_code', models.CharField(blank=True, max_length=30, null=True)),
                ('dba_name', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('zipcode', models.IntegerField(blank=True, null=True)),
                ('contact', models.CharField(blank=True, max_length=100, null=True)),
                ('area_code', models.IntegerField(blank=True, null=True)),
                ('telephone_number', models.CharField(blank=True, max_length=8, null=True)),
                ('cust_license', models.CharField(blank=True, max_length=100, null=True)),
                ('chain_indicator', models.CharField(blank=True, max_length=1, null=True)),
                ('demographics', models.CharField(blank=True, max_length=50, null=True)),
                ('delete_yn', models.BooleanField()),
                ('state', models.CharField(max_length=3)),
            ],
            options={
                'managed': False,
                'db_table': 'account_master',
            },
        ),
        migrations.CreateModel(
            name='AccountType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=15, primary_key=True)),
                ('account_type', models.CharField(db_column='account type', max_length=50)),
            ],
            options={
                'managed': False,
                'db_table': 'account_type',
            },
        ),
        migrations.CreateModel(
            name='ChainCode',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=30, primary_key=True)),
                ('chain_name', models.CharField(db_column='chain name', max_length=50)),
            ],
            options={
                'managed': False,
                'db_table': 'chain_code',
            },
        ),
        migrations.CreateModel(
            name='CodeMatching',
            fields=[
                ('retailer_search_string', models.CharField(max_length=100, primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'code_matching',
            },
        ),
        migrations.CreateModel(
            name='DistMaster',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('master_dist_id', models.CharField(max_length=30, primary_key=True)),
                ('dist_name', models.CharField(max_length=50)),
                ('dist_state', models.CharField(max_length=3)),
                ('dist_address', models.CharField(max_length=50)),
                ('dist_zip', models.IntegerField()),
                ('dist_filename', models.CharField(max_length=50)),
                ('depl_split_script', models.CharField(max_length=50)),
                ('rad_split_script', models.CharField(max_length=50)),
                ('rad_invc_lvl_split_script', models.CharField(max_length=50)),
                ('cust_split_script', models.CharField(max_length=50)),
                ('salesman_split_script', models.CharField(max_length=50)),
                ('prod_update', models.CharField(max_length=50)),
                ('yyyymm', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'dist_master',
            },
        ),
        migrations.CreateModel(
            name='DistSupCrossreference',
            fields=[
                ('master_dist_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('dist_sup_id', models.CharField(max_length=100)),
                ('master_sup_id', models.CharField(max_length=100)),
            ],
            options={
                'managed': False,
                'db_table': 'dist_sup_crossreference',
            },
        ),
        migrations.CreateModel(
            name='FoodType',
            fields=[
                ('code', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('food_type_desc', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'food_type',
            },
        ),
        migrations.CreateModel(
            name='LicenseType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=1, primary_key=True)),
                ('license_type', models.CharField(db_column='license type', max_length=30)),
            ],
            options={
                'managed': False,
                'db_table': 'license_type',
            },
        ),
        migrations.CreateModel(
            name='RetailerXref',
            fields=[
                ('sequence_no', models.IntegerField(blank=True, null=True)),
                ('record_type', models.IntegerField(blank=True, null=True)),
                ('distributor_id', models.CharField(max_length=100)),
                ('create_date', models.DateField()),
                ('yearmo', models.IntegerField(blank=True, null=True)),
                ('wholesaler_customer_code', models.CharField(max_length=100, primary_key=True)),
                ('state_license_code', models.CharField(blank=True, max_length=30, null=True)),
                ('dba_name', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=3)),
                ('zipcode', models.IntegerField(blank=True, null=True)),
                ('contact', models.CharField(blank=True, max_length=100, null=True)),
                ('area_code', models.IntegerField(blank=True, null=True)),
                ('telephone_number', models.CharField(blank=True, max_length=8, null=True)),
                ('license_type', models.CharField(blank=True, max_length=100, null=True)),
                ('chain_indicator', models.CharField(blank=True, max_length=1, null=True)),
                ('chain_code', models.CharField(blank=True, max_length=10, null=True)),
                ('demographics', models.CharField(blank=True, max_length=50, null=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'retailer_xref',
            },
        ),
        migrations.CreateModel(
            name='Sman',
            fields=[
                ('sequence_no', models.CharField(blank=True, max_length=3, null=True)),
                ('record_type', models.CharField(blank=True, max_length=3, null=True)),
                ('distributor_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('create_date', models.IntegerField()),
                ('yearmo', models.IntegerField(blank=True, null=True)),
                ('team', models.CharField(max_length=30)),
                ('salesman_id', models.CharField(max_length=30)),
                ('salesman_name', models.CharField(blank=True, max_length=30, null=True)),
                ('id', models.AutoField(primary_key=True)),
            ],
            options={
                'managed': False,
                'db_table': 'sman',
            },
        ),
        migrations.CreateModel(
            name='States',
            fields=[
                ('id', models.AutoField(primary_key=True)),
                ('state', models.CharField(max_length=3, primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'states',
            },
        ),
        migrations.CreateModel(
            name='SupData',
            fields=[
                ('sup_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('dist_id', models.CharField(max_length=50)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('dist_name', models.CharField(blank=True, max_length=100, null=True)),
                ('address', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, max_length=30, null=True)),
                ('zip', models.CharField(blank=True, max_length=12, null=True)),
                ('prod_id', models.CharField(max_length=50)),
                ('prod_desc', models.CharField(blank=True, max_length=150, null=True)),
                ('brand', models.CharField(blank=True, max_length=100, null=True)),
                ('size', models.CharField(blank=True, max_length=15, null=True)),
                ('pack', models.CharField(blank=True, max_length=15, null=True)),
                ('proof', models.CharField(blank=True, max_length=15, null=True)),
                ('vintage', models.CharField(blank=True, max_length=15, null=True)),
                ('date', models.DateField()),
                ('qty', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'sup_data',
            },
        ),
        migrations.CreateModel(
            name='SupMaster',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('master_sup_id', models.CharField(max_length=30, primary_key=True)),
                ('supplier_name', models.CharField(max_length=50)),
                ('supplier_zip', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'sup_master',
            },
        ),
        migrations.CreateModel(
            name='TradeChannel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=5, primary_key=True)),
                ('trade_channel', models.CharField(db_column='Trade Channel', max_length=50)),
            ],
            options={
                'managed': False,
                'db_table': 'trade_channel',
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('username', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('sup_dist', models.TextField()),
                ('password', models.CharField(max_length=80)),
                ('email', models.CharField(max_length=80)),
                ('user_id', models.AutoField(primary_key=True)),
            ],
            options={
                'managed': False,
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='Zipcode',
            fields=[
                ('zip', models.IntegerField(primary_key=True, serialize=False)),
                ('type', models.CharField(blank=True, max_length=50, null=True)),
                ('primary_city', models.CharField(max_length=100)),
                ('acceptable_cities', models.CharField(blank=True, max_length=300, null=True)),
                ('unacceptable_cities', models.CharField(blank=True, max_length=300, null=True)),
                ('state', models.CharField(max_length=4)),
                ('county', models.CharField(blank=True, max_length=100, null=True)),
                ('timezone', models.CharField(blank=True, max_length=100, null=True)),
                ('area_codes', models.IntegerField(blank=True, null=True)),
                ('lattitude', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('world_region', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('decommisioned', models.CharField(blank=True, max_length=100, null=True)),
                ('estimated_population', models.CharField(blank=True, max_length=100, null=True)),
                ('notes', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'zipcode',
            },
        ),
        migrations.CreateModel(
            name='Depl',
            fields=[
                ('sup', models.ForeignKey(db_column='sup', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='winemetrics.SupMaster')),
                ('sequence_no', models.CharField(blank=True, max_length=3, null=True)),
                ('record_type', models.CharField(blank=True, max_length=3, null=True)),
                ('yearmo', models.IntegerField()),
                ('opening_balance', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('trans_in', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('adjustments', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('retail_sales', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('wholesale_sales', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('transfers_out', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('closing_balance', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('on_premise_sales', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('off_premise_sales', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('military_sales', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('transportation_sales', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('on_order', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('in_bond_inventory', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('item_code', models.CharField(max_length=100)),
                ('item_desc', models.TextField()),
                ('item_size', models.TextField()),
                ('item_proof', models.TextField()),
                ('units_per_case', models.CharField(max_length=105)),
                ('receipts', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('last_date', models.DateField(blank=True, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'depl',
            },
        ),
        migrations.CreateModel(
            name='Rad',
            fields=[
                ('sup', models.ForeignKey(db_column='sup', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='winemetrics.SupMaster')),
                ('sequence_no', models.CharField(blank=True, max_length=3, null=True)),
                ('record_type', models.CharField(blank=True, max_length=3, null=True)),
                ('yearmo', models.IntegerField()),
                ('item_code', models.DecimalField(db_column='item code', decimal_places=65535, max_digits=65535)),
                ('case_quantity', models.DecimalField(db_column='case quantity', decimal_places=65535, max_digits=65535)),
                ('dollar_amount', models.DecimalField(blank=True, db_column='dollar amount', decimal_places=65535, max_digits=65535, null=True)),
                ('sales_division', models.CharField(blank=True, db_column='sales division', max_length=30, null=True)),
                ('salesman_number', models.CharField(blank=True, db_column='salesman number', max_length=30, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('last_date', models.DateField(blank=True, null=True)),
                ('customer_code', models.CharField(db_column='customer code', max_length=100)),
                ('id', models.AutoField(primary_key=True)),
            ],
            options={
                'managed': False,
                'db_table': 'rad',
            },
        ),
        migrations.CreateModel(
            name='RadInvc',
            fields=[
                ('sup', models.ForeignKey(db_column='sup', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='winemetrics.SupMaster')),
                ('yyyymmdd', models.IntegerField()),
                ('item_code', models.DecimalField(db_column='item code', decimal_places=65535, max_digits=65535)),
                ('case_quantity', models.DecimalField(db_column='case quantity', decimal_places=65535, max_digits=65535)),
                ('dollar_amount', models.DecimalField(blank=True, db_column='dollar amount', decimal_places=65535, max_digits=65535, null=True)),
                ('sales_division', models.CharField(blank=True, db_column='sales division', max_length=30, null=True)),
                ('salesman_number', models.CharField(blank=True, db_column='salesman number', max_length=30, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('last_date', models.DateField(blank=True, null=True)),
                ('id', models.AutoField(primary_key=True)),
                ('invoice_number', models.CharField(blank=True, max_length=100, null=True)),
                ('customer_code', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'rad_invc',
            },
        ),
    ]
